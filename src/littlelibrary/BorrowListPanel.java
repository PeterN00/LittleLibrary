/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package littlelibrary;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public final class BorrowListPanel extends javax.swing.JPanel {

    /**
     * Creates new form BorrowListPanel
     */
    ArrayList<BorrowInfo> borrowList = BorrowInfoManagement.borrowInfoList();
    public BorrowListPanel() {
        initComponents();
        borrowListTable.getTableHeader().setEnabled(false);
        borrowListTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        borrowListTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 24));
        borrowListTable.requestFocusInWindow();
        displayBorrowListTable();
        SearchTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        borrowListTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        buttonRefresh = new javax.swing.JButton();
        btReturnBook = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(190, 218, 245));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        borrowListTable.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        borrowListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Borrow ID", "Library ID", "ISBN", "Borrowed Date", "Due Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        borrowListTable.setAutoscrolls(false);
        borrowListTable.setRowHeight(30);
        borrowListTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        borrowListTable.getTableHeader().setReorderingAllowed(false);
        borrowListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                borrowListTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(borrowListTable);
        borrowListTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (borrowListTable.getColumnModel().getColumnCount() > 0) {
            borrowListTable.getColumnModel().getColumn(0).setResizable(false);
            borrowListTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            borrowListTable.getColumnModel().getColumn(1).setResizable(false);
            borrowListTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            borrowListTable.getColumnModel().getColumn(2).setResizable(false);
            borrowListTable.getColumnModel().getColumn(2).setPreferredWidth(200);
            borrowListTable.getColumnModel().getColumn(3).setResizable(false);
            borrowListTable.getColumnModel().getColumn(3).setPreferredWidth(270);
            borrowListTable.getColumnModel().getColumn(4).setResizable(false);
            borrowListTable.getColumnModel().getColumn(4).setPreferredWidth(270);
            borrowListTable.getColumnModel().getColumn(5).setResizable(false);
            borrowListTable.getColumnModel().getColumn(5).setPreferredWidth(170);
        }

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MagnifyingGlass.png"))); // NOI18N

        tfSearch.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfSearch.setForeground(new java.awt.Color(153, 153, 153));
        tfSearch.setText("Search");
        tfSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfSearchFocusLost(evt);
            }
        });
        tfSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfSearchMouseClicked(evt);
            }
        });

        buttonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        buttonRefresh.setContentAreaFilled(false);
        buttonRefresh.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh_Hover.png"))); // NOI18N
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        btReturnBook.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btReturnBook.setText("Return");
        btReturnBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btReturnBookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btReturnBookMouseExited(evt);
            }
        });
        btReturnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReturnBookActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("*Double click for more borrow details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1180, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btReturnBook)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btReturnBook)
                    .addComponent(buttonRefresh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSearch, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setStatusCellColor(JTable table){
        table.getColumnModel().getColumn(5).setCellRenderer(new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column){
                Component cp = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                
                Object obj = table.getValueAt(row, 5);
                
                if(obj.equals("PENDING"))
                    cp.setForeground(Color.GREEN);
                if(obj.equals("LATE"))
                    cp.setForeground(Color.RED);
                if(obj.equals("RESOLVED"))
                    cp.setForeground(Color.BLUE);
                
                return cp;
            }
        });
    }
    
    public void displayBorrowListTable(){
        DefaultTableModel model = (DefaultTableModel)borrowListTable.getModel(); 
        model.setRowCount(0);
        Object[] row = new Object[6];
        if(!borrowList.isEmpty()){
            for(int i=0;i<borrowList.size();i++){
                row[0] = borrowList.get(i).getBorrowID();
                row[1] = borrowList.get(i).getMemberLibID();
                row[2] = borrowList.get(i).getBorrowedISBN();
                row[3] = borrowList.get(i).getBorrowDate();
                row[4] = borrowList.get(i).getDueDate();
                row[5] = BorrowInfoManagement.getStatus(borrowList.get(i).getReturnDate(), borrowList.get(i).getDueDate());
                
                model.addRow(row);
                setStatusCellColor(borrowListTable);
            }
        }
    }
    
    public void SearchTable(){        
        DefaultTableModel searchmodel = (DefaultTableModel)borrowListTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(searchmodel);
        borrowListTable.setRowSorter(sorter);
        tfSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent de) {
                String text = tfSearch.getText();
                if(text.trim().length()==0 || text.equals("Search")){
                    sorter.setRowFilter(null);
                }
                else{
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                String text = tfSearch.getText();
                if(text.trim().length()==0 || text.equals("Search")){
                    sorter.setRowFilter(null);
                }
                else{
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                
            }
            
    });
    }
    
    private void tfSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSearchFocusGained
        if(tfSearch.getText().equals("Search") && tfSearch.isEnabled()){
            tfSearch.setText("");
            tfSearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfSearchFocusGained

    private void tfSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSearchFocusLost
        if(tfSearch.getText().isEmpty()){
            tfSearch.setForeground(Color.GRAY);
            tfSearch.setText("Search");
        }
    }//GEN-LAST:event_tfSearchFocusLost

    private void tfSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfSearchMouseClicked
        if(tfSearch.getText().equals("Search") && tfSearch.isEnabled()){
            tfSearch.setText("");
            tfSearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfSearchMouseClicked

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        borrowList = BorrowInfoManagement.borrowInfoList();
        displayBorrowListTable();
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void btReturnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReturnBookActionPerformed
        int selectedRow = borrowListTable.getSelectedRow();
        if(selectedRow==-1){
            JOptionPane.showMessageDialog(null, "Please select a row!", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int borrowID = Integer.parseInt(borrowListTable.getValueAt(selectedRow, 0).toString());
        int confirm = JOptionPane.showConfirmDialog(null, "[Borrow ID: "+borrowID+"]\n"+"Return confirm?", "Confirmation!", JOptionPane.YES_NO_OPTION);
        if(confirm==JOptionPane.YES_OPTION){
            BorrowInfoManagement.returnBook(borrowID);
            borrowList = BorrowInfoManagement.borrowInfoList();
            displayBorrowListTable();
        }
    }//GEN-LAST:event_btReturnBookActionPerformed

    private void borrowListTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrowListTableMousePressed
        int borrowID = Integer.parseInt(borrowListTable.getValueAt(borrowListTable.getSelectedRow(), 0).toString());
        if(evt.getClickCount()==2 && !evt.isConsumed()){
            evt.consume();
            BorrowDetailsForm bdf = new BorrowDetailsForm(borrowID);
            bdf.setVisible(true);
        }
    }//GEN-LAST:event_borrowListTableMousePressed

    private void btReturnBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btReturnBookMouseEntered
        btReturnBook.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_btReturnBookMouseEntered

    private void btReturnBookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btReturnBookMouseExited
        btReturnBook.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btReturnBookMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable borrowListTable;
    private javax.swing.JButton btReturnBook;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
