/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package littlelibrary;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Admin
 */
public class NewBookForm extends javax.swing.JFrame {

    /**
     * Creates new form NewBookForm
     */
    public NewBookForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        bookCover.setIcon(new ImageIcon(System.getProperty("user.dir")+"/src/BookCover/Empty.jpg"));
        tfYear.setText(String.valueOf(Calendar.getInstance().get(Calendar.YEAR)));
        tfTitle.requestFocus();
        this.getContentPane().setBackground(new Color(190,218,245));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbISBN = new javax.swing.JLabel();
        tfISBN = new javax.swing.JTextField();
        lbTitle = new javax.swing.JLabel();
        tfTitle = new javax.swing.JTextField();
        lbLanguage = new javax.swing.JLabel();
        tfLanguage = new javax.swing.JTextField();
        lbQuantity = new javax.swing.JLabel();
        tfQuantity = new javax.swing.JTextField();
        lbPrice = new javax.swing.JLabel();
        tfPrice = new javax.swing.JTextField();
        lbYear = new javax.swing.JLabel();
        tfYear = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lbAuthor = new javax.swing.JLabel();
        lbDisplayAuthor = new javax.swing.JLabel();
        lbCategory = new javax.swing.JLabel();
        lbDisplayCategory = new javax.swing.JLabel();
        bookCover = new javax.swing.JLabel();
        buttonChangeCover = new javax.swing.JButton();
        buttonAuthor = new javax.swing.JButton();
        buttonCategory = new javax.swing.JButton();
        buttonAddBook = new javax.swing.JButton();
        buttonUndoAll = new javax.swing.JButton();
        newBookIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Book");

        lbISBN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbISBN.setText("ISBN:");

        tfISBN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfISBN.setForeground(new java.awt.Color(153, 153, 153));
        tfISBN.setText("e.g. 1234567890123");
        tfISBN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfISBNFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfISBNFocusLost(evt);
            }
        });

        lbTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbTitle.setText("Title:");

        tfTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfTitle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfTitleFocusGained(evt);
            }
        });

        lbLanguage.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbLanguage.setText("Language:");

        tfLanguage.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfLanguage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfLanguageFocusGained(evt);
            }
        });

        lbQuantity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbQuantity.setText("Quantity:");

        tfQuantity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfQuantity.setText("1");
        tfQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfQuantityFocusGained(evt);
            }
        });

        lbPrice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbPrice.setText("Price (VND):");

        tfPrice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfPrice.setText("0.0");
        tfPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfPriceFocusGained(evt);
            }
        });

        lbYear.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbYear.setText("Published year:");

        tfYear.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfYearFocusGained(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lbAuthor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbAuthor.setText("Author:");

        lbDisplayAuthor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbDisplayAuthor.setText("?");

        lbCategory.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbCategory.setText("Category:");

        lbDisplayCategory.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbDisplayCategory.setText("?");

        bookCover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BookCover/Empty.jpg"))); // NOI18N
        bookCover.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        buttonChangeCover.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        buttonChangeCover.setText("CHANGE");
        buttonChangeCover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonChangeCoverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonChangeCoverMouseExited(evt);
            }
        });
        buttonChangeCover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangeCoverActionPerformed(evt);
            }
        });

        buttonAuthor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus.png"))); // NOI18N
        buttonAuthor.setContentAreaFilled(false);
        buttonAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAuthorActionPerformed(evt);
            }
        });

        buttonCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus.png"))); // NOI18N
        buttonCategory.setContentAreaFilled(false);
        buttonCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCategoryActionPerformed(evt);
            }
        });

        buttonAddBook.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        buttonAddBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Yes Mark.png"))); // NOI18N
        buttonAddBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonAddBookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonAddBookMouseExited(evt);
            }
        });
        buttonAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddBookActionPerformed(evt);
            }
        });

        buttonUndoAll.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        buttonUndoAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        buttonUndoAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonUndoAllMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonUndoAllMouseExited(evt);
            }
        });
        buttonUndoAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUndoAllActionPerformed(evt);
            }
        });

        newBookIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/New Book Icon.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(newBookIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbLanguage)
                            .addComponent(lbTitle)
                            .addComponent(lbISBN)
                            .addComponent(lbAuthor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDisplayAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(360, 360, 360))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbCategory)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbDisplayCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookCover, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonAddBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonUndoAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonChangeCover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbYear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbQuantity)
                            .addComponent(lbPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newBookIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbISBN)
                            .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTitle)
                            .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbLanguage)
                            .addComponent(tfLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbAuthor)
                            .addComponent(lbDisplayAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCategory)
                            .addComponent(lbDisplayCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(385, 385, 385))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbYear)
                            .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbQuantity)
                            .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbPrice)
                            .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bookCover, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonChangeCover, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonUndoAll, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonAddBook)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ImageIcon resizedImage(String path){
        ImageIcon icon = new ImageIcon(path);
        Image image = icon.getImage().getScaledInstance(250, 300, Image.SCALE_DEFAULT);
        ImageIcon resizedIcon = new ImageIcon(image);
        return resizedIcon;
    }
    
    private void buttonChangeCoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangeCoverActionPerformed
        JFileChooser fc = new JFileChooser(System.getProperty("user.dir")+"/src/BookCover");
        fc.setAcceptAllFileFilterUsed(false);
        fc.setFileFilter(new FileNameExtensionFilter("JPEG, PNG (*.jpg, *.jpeg, *.png)", "jpg", "jpeg", "png"));
        int result = fc.showOpenDialog(this);
        if(result == JFileChooser.APPROVE_OPTION){
            File f = fc.getSelectedFile();
            bookCover.setIcon(resizedImage(f.getPath()));
        }
    }//GEN-LAST:event_buttonChangeCoverActionPerformed

    public int checkISBN_IsNumeric(String ISBN){
        int count = 0;
        for(int i=0;i<ISBN.length();i++){
            if(Character.isDigit(ISBN.charAt(i))){
                count+=1;
            }
        }
        return count;
    }
    
    public boolean checkDuplicatedISBN(String ISBN){
        ArrayList<Book> bookList = BookManagement.bookList();
        for(int i=0; i<bookList.size(); i++){
            if(ISBN.equals(bookList.get(i).getISBN()))
                return true;
        }
        return false;
    }
    
    public byte[] imageToByte(Icon cover){
        byte[] byteArray;
        BufferedImage bf = new BufferedImage(cover.getIconWidth(), cover.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics2D bGr = bf.createGraphics();
        cover.paintIcon(null, bGr, 0, 0);
        bGr.dispose();
        ByteArrayOutputStream bs = new ByteArrayOutputStream();
        try {
            ImageIO.write(bf, "png", bs);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex, "Alert!", JOptionPane.WARNING_MESSAGE);
        }
        
        byteArray = bs.toByteArray();
        
        return byteArray;
    }
    
    private void buttonAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddBookActionPerformed
        if(tfISBN.getText().length()!=13){
            JOptionPane.showMessageDialog(null, "ISBN must have 13 digits in total!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfISBN.setBackground(Color.yellow);
            return;
        }
        if(checkISBN_IsNumeric(tfISBN.getText())!=13){
            JOptionPane.showMessageDialog(null, "ISBN only contains numbers", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfISBN.setBackground(Color.yellow);
            return;
        }
        
        if(checkDuplicatedISBN(tfISBN.getText())==true){
            JOptionPane.showMessageDialog(null, "Book "+"\""+tfISBN.getText()+"\""+" already exists!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfISBN.setBackground(Color.yellow);
            return;
        }
        
        int errorCount=0;
        List<String> error = new ArrayList();
        if(tfTitle.getText().isEmpty()){
            error.add("Title");
            tfTitle.setBackground(Color.yellow);
            errorCount+=1;
        }
        if(tfLanguage.getText().isEmpty()){
            error.add("Language");
            tfLanguage.setBackground(Color.yellow);
            errorCount+=1;
        }
        if(tfYear.getText().isEmpty()){
            error.add("Published year");
            tfYear.setBackground(Color.yellow);
            errorCount+=1;
        }
        if(tfQuantity.getText().isEmpty()){
            error.add("Quantity");
            tfQuantity.setBackground(Color.yellow);
            errorCount+=1;
        }
        if(tfPrice.getText().isEmpty()){
                error.add("Price");
                tfPrice.setBackground(Color.yellow);
                errorCount+=1;
            }
        if(errorCount>0){
            String err = "";
            for(String temp : error){
                err+=temp+"\n";
            }
            JOptionPane.showMessageDialog(null, "The following field(s) cannot be empty:\n"+err, "Alert!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        int err = 0;
        try{
            Integer.parseInt(tfQuantity.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Quantity has to be an integer!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfQuantity.setBackground(Color.yellow);
            err+=1;
        }
        try{
            Integer.parseInt(tfYear.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Published year has to be an integer!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfYear.setBackground(Color.yellow);
            err+=1;
        }
        try{
            Float.parseFloat(tfPrice.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Price has to be a number", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfPrice.setBackground(Color.yellow);
            err+=1;
        }
        if(err!=0)
            return;
        
        if(Integer.parseInt(tfQuantity.getText())<0){
            JOptionPane.showMessageDialog(null, "Quantity's value cannot be less than 1!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfQuantity.setBackground(Color.yellow);
            return;
        }
        if(Float.parseFloat(tfPrice.getText())<0){
            JOptionPane.showMessageDialog(null, "Price's value cannot be less than 0!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfPrice.setBackground(Color.yellow);
            return;
        }
        if(Integer.parseInt(tfYear.getText())<0){
            JOptionPane.showMessageDialog(null, "Published year's value cannot be less than 0!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
            tfYear.setBackground(Color.yellow);
            return;
        }
        
        BookManagement.addBook(tfISBN.getText(), tfTitle.getText().trim(), tfLanguage.getText().trim(), Integer.parseInt(tfQuantity.getText().trim()), Float.parseFloat(tfPrice.getText().trim())
                , Integer.parseInt(tfYear.getText().trim()), "Reserved");
        
        String path = bookCover.getIcon().toString();
        byte[] cover = imageToByte(bookCover.getIcon());
        if(path.contains("Empty.jpg"))
            BookManagement.changeCover(tfISBN.getText(), null);
        else
            BookManagement.changeCover(tfISBN.getText(), cover);
        
        String[] category = selectedCategory();
        if(category != null)
            BookManagement.addBookCategory(tfISBN.getText(), category);
        
        String[] author = addedAuthor();
        if(author != null)
            BookManagement.addBookAuthor(tfISBN.getText(), author);
        
    }//GEN-LAST:event_buttonAddBookActionPerformed

    private void buttonUndoAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUndoAllActionPerformed
        tfISBN.setText("e.g. 1234567890123");
        tfISBN.setForeground(Color.GRAY);
        tfTitle.setText("");
        tfLanguage.setText("");
        tfQuantity.setText("1");
        tfPrice.setText("0.0");
        lbDisplayAuthor.setText("?");
        lbDisplayCategory.setText("?");
        bookCover.setIcon(new ImageIcon(System.getProperty("user.dir")+"/src/BookCover/Empty.jpg"));
        tfYear.setText(String.valueOf(Calendar.getInstance().get(Calendar.YEAR)));
    }//GEN-LAST:event_buttonUndoAllActionPerformed
    
    public String[] addedAuthor(){
        String[] addedAuthor;
        if(lbDisplayAuthor.getText().equals("?")){
            addedAuthor = null;
        }
        else{
            if(lbDisplayAuthor.getToolTipText()!=null){
                String temp = lbDisplayAuthor.getToolTipText().substring(21,lbDisplayAuthor.getToolTipText().length()-11);
                addedAuthor = temp.split(",\\s");
            }
            else{
                String temp = lbDisplayAuthor.getText().substring(22,lbDisplayAuthor.getText().length()-11);
                addedAuthor = temp.split(",\\s");
            }
        }
        return addedAuthor;
    }
    
    private void buttonAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAuthorActionPerformed
        this.setEnabled(false);
        String[] addedAuthor = addedAuthor();
        AuthorFrame authorFrame = new AuthorFrame(lbDisplayAuthor, this, addedAuthor);
        authorFrame.setVisible(true);
    }//GEN-LAST:event_buttonAuthorActionPerformed
    
    public String[] selectedCategory(){
        String[] categoryList;
        if(lbDisplayCategory.getText().equals("?"))
            categoryList = null;
        else{
            if(lbDisplayCategory.getToolTipText()!=null){
                String temp = lbDisplayCategory.getToolTipText().substring(21, lbDisplayCategory.getToolTipText().length()-11);
                categoryList = temp.split(",\\s");
            }
            else{
                String temp = lbDisplayCategory.getText().substring(22, lbDisplayCategory.getText().length()-11);
                categoryList = temp.split(",\\s");
            }
        }
        return categoryList;
    }
    
    private void buttonCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCategoryActionPerformed
        this.setEnabled(false);
        String[] categoryArray = selectedCategory();
        CategoryFrame categoryFrame = new CategoryFrame(lbDisplayCategory, this, categoryArray);
        categoryFrame.setVisible(true);
    }//GEN-LAST:event_buttonCategoryActionPerformed

    private void tfISBNFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfISBNFocusGained
        tfISBN.setBackground(Color.WHITE);
        if(tfISBN.getText().equals("e.g. 1234567890123")){
            tfISBN.setText("");
            tfISBN.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfISBNFocusGained

    private void tfTitleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfTitleFocusGained
        tfTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfTitleFocusGained

    private void tfLanguageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfLanguageFocusGained
        tfLanguage.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfLanguageFocusGained

    private void tfYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfYearFocusGained
        tfYear.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfYearFocusGained

    private void tfQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfQuantityFocusGained
        tfQuantity.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfQuantityFocusGained

    private void tfPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPriceFocusGained
        tfPrice.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfPriceFocusGained

    private void tfISBNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfISBNFocusLost
        if(tfISBN.getText().isEmpty()){
            tfISBN.setText("e.g. 1234567890123");
            tfISBN.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_tfISBNFocusLost

    private void buttonChangeCoverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonChangeCoverMouseEntered
        buttonChangeCover.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_buttonChangeCoverMouseEntered

    private void buttonChangeCoverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonChangeCoverMouseExited
        buttonChangeCover.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_buttonChangeCoverMouseExited

    private void buttonUndoAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonUndoAllMouseEntered
        buttonUndoAll.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_buttonUndoAllMouseEntered

    private void buttonUndoAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonUndoAllMouseExited
        buttonUndoAll.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_buttonUndoAllMouseExited

    private void buttonAddBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddBookMouseEntered
        buttonAddBook.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_buttonAddBookMouseEntered

    private void buttonAddBookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddBookMouseExited
        buttonAddBook.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_buttonAddBookMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookCover;
    private javax.swing.JButton buttonAddBook;
    private javax.swing.JButton buttonAuthor;
    private javax.swing.JButton buttonCategory;
    private javax.swing.JButton buttonChangeCover;
    private javax.swing.JButton buttonUndoAll;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbAuthor;
    private javax.swing.JLabel lbCategory;
    private javax.swing.JLabel lbDisplayAuthor;
    private javax.swing.JLabel lbDisplayCategory;
    private javax.swing.JLabel lbISBN;
    private javax.swing.JLabel lbLanguage;
    private javax.swing.JLabel lbPrice;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbYear;
    private javax.swing.JLabel newBookIcon;
    private javax.swing.JTextField tfISBN;
    private javax.swing.JTextField tfLanguage;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfQuantity;
    private javax.swing.JTextField tfTitle;
    private javax.swing.JTextField tfYear;
    // End of variables declaration//GEN-END:variables
}
