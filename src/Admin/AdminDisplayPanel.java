/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import Account.Account;
import Account.AccountManagement;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public final class AdminDisplayPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminDisplayPanel
     */
    ArrayList<Admin> adminList = AdminManagement.adminList();
    public AdminDisplayPanel() {
        initComponents();
        adminTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        adminTable.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 24));
        adminTable.getTableHeader().setEnabled(false);
        adminTable.requestFocusInWindow();
        displayAdminTable();
        displayFirstAdmin();
        SearchTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        buttonRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        adminTable = new javax.swing.JTable();
        adminPanel = new javax.swing.JPanel();
        infoPanel = new javax.swing.JPanel();
        jspInfoPanel = new javax.swing.JScrollPane();
        adminInfoPanel = new javax.swing.JPanel();
        lbGender = new javax.swing.JLabel();
        lbDOB = new javax.swing.JLabel();
        lbPhone = new javax.swing.JLabel();
        lbEmail = new javax.swing.JLabel();
        lbAddress = new javax.swing.JLabel();
        lbStartDate = new javax.swing.JLabel();
        lbDisplayEmail = new javax.swing.JLabel();
        lbDisplayAddress = new javax.swing.JLabel();
        btEdit = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        btAccount = new javax.swing.JButton();
        infoEditPanel = new javax.swing.JPanel();
        jspInfoEditPanel = new javax.swing.JScrollPane();
        adminInfoEditPanel = new javax.swing.JPanel();
        lbGender2 = new javax.swing.JLabel();
        lbDOB2 = new javax.swing.JLabel();
        lbPhone2 = new javax.swing.JLabel();
        lbEmail2 = new javax.swing.JLabel();
        lbAddress2 = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox<>();
        tfDay = new javax.swing.JTextField();
        lbDOB3 = new javax.swing.JLabel();
        tfMonth = new javax.swing.JTextField();
        lbDOB4 = new javax.swing.JLabel();
        tfYear = new javax.swing.JTextField();
        tfPhone = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        taAddress = new javax.swing.JTextArea();
        btSave = new javax.swing.JButton();
        btReturn = new javax.swing.JButton();
        btNewAdmin = new javax.swing.JButton();

        setBackground(new java.awt.Color(190, 218, 245));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MagnifyingGlass.png"))); // NOI18N

        tfSearch.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfSearch.setForeground(new java.awt.Color(153, 153, 153));
        tfSearch.setText("Search by Library ID/Name");
        tfSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfSearchFocusLost(evt);
            }
        });
        tfSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfSearchMouseClicked(evt);
            }
        });

        buttonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        buttonRefresh.setContentAreaFilled(false);
        buttonRefresh.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh_Hover.png"))); // NOI18N
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        adminTable.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        adminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Library ID", "Full Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        adminTable.setAutoscrolls(false);
        adminTable.setRowHeight(40);
        adminTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        adminTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                adminTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(adminTable);
        if (adminTable.getColumnModel().getColumnCount() > 0) {
            adminTable.getColumnModel().getColumn(0).setResizable(false);
            adminTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            adminTable.getColumnModel().getColumn(1).setResizable(false);
            adminTable.getColumnModel().getColumn(1).setPreferredWidth(500);
        }

        adminPanel.setOpaque(false);
        adminPanel.setLayout(new java.awt.CardLayout());

        infoPanel.setOpaque(false);

        jspInfoPanel.setPreferredSize(new java.awt.Dimension(600, 400));

        adminInfoPanel.setBackground(new java.awt.Color(204, 255, 204));
        adminInfoPanel.setPreferredSize(new java.awt.Dimension(500, 300));

        lbGender.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbGender.setText("Gender: ");

        lbDOB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbDOB.setText("D.O.B: ");

        lbPhone.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbPhone.setText("Phone: ");

        lbEmail.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbEmail.setText("Email:");

        lbAddress.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbAddress.setText("Address:");

        lbStartDate.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbStartDate.setText("Start date: ");

        lbDisplayEmail.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        lbDisplayAddress.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout adminInfoPanelLayout = new javax.swing.GroupLayout(adminInfoPanel);
        adminInfoPanel.setLayout(adminInfoPanelLayout);
        adminInfoPanelLayout.setHorizontalGroup(
            adminInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminInfoPanelLayout.createSequentialGroup()
                        .addComponent(lbAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDisplayAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminInfoPanelLayout.createSequentialGroup()
                        .addComponent(lbEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDisplayEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        adminInfoPanelLayout.setVerticalGroup(
            adminInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbGender)
                .addGap(18, 18, 18)
                .addComponent(lbDOB)
                .addGap(18, 18, 18)
                .addComponent(lbPhone)
                .addGap(18, 18, 18)
                .addGroup(adminInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDisplayEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDisplayAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAddress))
                .addGap(18, 18, 18)
                .addComponent(lbStartDate)
                .addGap(136, 136, 136))
        );

        jspInfoPanel.setViewportView(adminInfoPanel);

        btEdit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btEdit.setText("Edit");
        btEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btEditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btEditMouseExited(evt);
            }
        });
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btRemove.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btRemove.setText("Remove");
        btRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btRemoveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btRemoveMouseExited(evt);
            }
        });
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });

        btAccount.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btAccount.setText("Account");
        btAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btAccountMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btAccountMouseExited(evt);
            }
        });
        btAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(btEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAccount)))
                .addContainerGap())
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEdit)
                    .addComponent(btRemove)
                    .addComponent(btAccount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminPanel.add(infoPanel, "card2");

        infoEditPanel.setOpaque(false);

        jspInfoEditPanel.setPreferredSize(new java.awt.Dimension(600, 400));

        adminInfoEditPanel.setBackground(new java.awt.Color(204, 255, 204));
        adminInfoEditPanel.setPreferredSize(new java.awt.Dimension(500, 300));

        lbGender2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbGender2.setText("Gender:");

        lbDOB2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbDOB2.setText("D.O.B:");

        lbPhone2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbPhone2.setText("Phone:");

        lbEmail2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbEmail2.setText("Email:");

        lbAddress2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbAddress2.setText("Address:");

        cbGender.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        tfDay.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDayFocusGained(evt);
            }
        });

        lbDOB3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbDOB3.setText("-");

        tfMonth.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfMonthFocusGained(evt);
            }
        });

        lbDOB4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbDOB4.setText("-");

        tfYear.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfYearFocusGained(evt);
            }
        });

        tfPhone.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfPhoneFocusGained(evt);
            }
        });

        tfEmail.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfEmailFocusGained(evt);
            }
        });

        jScrollPane2.setPreferredSize(new java.awt.Dimension(450, 100));

        taAddress.setColumns(20);
        taAddress.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        taAddress.setLineWrap(true);
        taAddress.setRows(7);
        taAddress.setWrapStyleWord(true);
        taAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                taAddressFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(taAddress);

        javax.swing.GroupLayout adminInfoEditPanelLayout = new javax.swing.GroupLayout(adminInfoEditPanel);
        adminInfoEditPanel.setLayout(adminInfoEditPanelLayout);
        adminInfoEditPanelLayout.setHorizontalGroup(
            adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminInfoEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminInfoEditPanelLayout.createSequentialGroup()
                        .addComponent(lbAddress2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminInfoEditPanelLayout.createSequentialGroup()
                        .addComponent(lbGender2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminInfoEditPanelLayout.createSequentialGroup()
                        .addComponent(lbDOB2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDOB3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDOB4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminInfoEditPanelLayout.createSequentialGroup()
                        .addComponent(lbPhone2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminInfoEditPanelLayout.createSequentialGroup()
                        .addComponent(lbEmail2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminInfoEditPanelLayout.setVerticalGroup(
            adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminInfoEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbGender)
                    .addComponent(lbGender2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfDay)
                        .addComponent(lbDOB3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfMonth)
                        .addComponent(lbDOB4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfYear))
                    .addComponent(lbDOB2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminInfoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAddress2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88))
        );

        jspInfoEditPanel.setViewportView(adminInfoEditPanel);

        btSave.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btSave.setText("Save");
        btSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btSaveMouseExited(evt);
            }
        });
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btReturn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btReturn.setText("Return");
        btReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btReturnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btReturnMouseExited(evt);
            }
        });
        btReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoEditPanelLayout = new javax.swing.GroupLayout(infoEditPanel);
        infoEditPanel.setLayout(infoEditPanelLayout);
        infoEditPanelLayout.setHorizontalGroup(
            infoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspInfoEditPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(infoEditPanelLayout.createSequentialGroup()
                        .addComponent(btSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btReturn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        infoEditPanelLayout.setVerticalGroup(
            infoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSave)
                    .addComponent(btReturn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspInfoEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                .addContainerGap())
        );

        adminPanel.add(infoEditPanel, "card3");

        btNewAdmin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btNewAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/NewAdmin (Button).png"))); // NOI18N
        btNewAdmin.setText("NEW ADMIN");
        btNewAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btNewAdminMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btNewAdminMouseExited(evt);
            }
        });
        btNewAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(4, 4, 4)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btNewAdmin))
                .addGap(18, 18, 18)
                .addComponent(adminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(adminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNewAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void displayAdminTable(){
        DefaultTableModel tableModel = (DefaultTableModel) adminTable.getModel();
        tableModel.setRowCount(0);
        Object[] row = new Object[2];
        for(Admin admin : adminList){
            row[0] = admin.getLibID();
            row[1] = admin.getFirstName()+" "+admin.getLastName();
            tableModel.addRow(row);
        }
    }
    
    public String displayDate(String date){
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        Date d;
        String str = "";
        try {
            d = dt.parse(date);
            SimpleDateFormat dt1 = new SimpleDateFormat("MMM dd, yyyy");
            str = dt1.format(d);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, ex, "Alert!", JOptionPane.WARNING_MESSAGE);
        }
        
        return str;
    }
    
    public void displayFirstAdmin(){
        adminTable.setRowSelectionInterval(0, 0);
        lbGender.setText("Gender: "+adminList.get(0).getGender());
        lbDOB.setText("D.O.B: "+displayDate(adminList.get(0).getDOB()));
        lbPhone.setText("Phone: "+adminList.get(0).getPhone());
        lbDisplayEmail.setText("<html><p align=\"left\">"+adminList.get(0).getEmail()+"</p></html>");
        lbDisplayAddress.setText("<html><p align=\"left\">"+adminList.get(0).getAddress()+"</p></html>");
        lbStartDate.setText("Registration date: "+displayDate(adminList.get(0).getStart_Date()));
    }
    
    public void displayAdminInfo(){
        int selectedRow = adminTable.getSelectedRow();
        for(Admin admin : adminList){
            if(String.valueOf(admin.getLibID()).equals(adminTable.getModel().getValueAt(selectedRow, 0).toString())){
                lbGender.setText("Gender: "+admin.getGender());
                lbDOB.setText("D.O.B: "+displayDate(admin.getDOB()));
                lbPhone.setText("Phone: "+admin.getPhone());
                lbDisplayEmail.setText("<html><p align=\"left\">"+admin.getEmail()+"</p></html>");
                lbDisplayAddress.setText("<html><p align=\"left\">"+admin.getAddress()+"</p></html>");
                lbStartDate.setText("Start date: "+displayDate(admin.getStart_Date()));
                break;
            }
        }
    }
    
    public void displayEditDOB(String date){
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        Date d = null;
        try{
            d = dt.parse(date);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, ex, "Alert!", JOptionPane.WARNING_MESSAGE);
        }
        if(d!=null){
            tfDay.setText(String.valueOf(d.getDate()));
            tfMonth.setText(String.valueOf(d.getMonth()+1));
            tfYear.setText(String.valueOf(d.getYear()+1900));
        }
    }
    
    public void displayEditAdminInfo(){
        int selectedRow = adminTable.getSelectedRow();
        for(Admin admin : adminList){
            if(String.valueOf(admin.getLibID()).equals(adminTable.getModel().getValueAt(selectedRow, 0).toString())){
                cbGender.setSelectedItem(admin.getGender());
                displayEditDOB(admin.getDOB());
                tfPhone.setText(admin.getPhone());
                tfEmail.setText(admin.getEmail());
                taAddress.setText(admin.getAddress());
                break;
            }
        }
    }
    
    public void SearchTable(){        
        DefaultTableModel searchmodel = (DefaultTableModel)adminTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(searchmodel);
        adminTable.setRowSorter(sorter);
        tfSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent de) {
                String text = tfSearch.getText();
                if(text.trim().length()==0 || text.equals("Search by Library ID/Name")){
                    sorter.setRowFilter(null);
                }
                else{
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                String text = tfSearch.getText();
                if(text.trim().length()==0 || text.equals("Search by Library ID/Name")){
                    sorter.setRowFilter(null);
                }
                else{
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                throw new UnsupportedOperationException("Not supported yet."); 
            }
            
    });
    }
    
    private void tfSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSearchFocusGained
        if(tfSearch.getText().equals("Search by Library ID/Name") && tfSearch.isEnabled()){
            tfSearch.setText("");
            tfSearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfSearchFocusGained

    private void tfSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSearchFocusLost
        if(tfSearch.getText().isEmpty()){
            tfSearch.setForeground(Color.GRAY);
            tfSearch.setText("Search by Library ID/Name");
        }
    }//GEN-LAST:event_tfSearchFocusLost

    private void tfSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfSearchMouseClicked
        if(tfSearch.getText().equals("Search by Library ID/Name") && tfSearch.isEnabled()){
            tfSearch.setText("");
            tfSearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfSearchMouseClicked

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        adminList = AdminManagement.adminList();
        displayAdminTable();
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void adminTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminTableMousePressed
        displayAdminInfo();
    }//GEN-LAST:event_adminTableMousePressed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        int selectedRow = adminTable.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "Please select a admin to edit!", "Notification!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, "Do you really want to edit this admin info?", "Member Editing!", JOptionPane.YES_NO_OPTION);
        if(confirm==JOptionPane.YES_OPTION){
            adminPanel.removeAll();
            adminPanel.add(infoEditPanel);
            adminPanel.revalidate();
            adminPanel.repaint();
            displayEditAdminInfo();
            adminTable.setEnabled(false);
        }
    }//GEN-LAST:event_btEditActionPerformed

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        int selectedRow = adminTable.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "Please select a admin to remove!", "Notification!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int libID = Integer.parseInt(adminTable.getModel().getValueAt(selectedRow, 0).toString());
        String name = adminTable.getModel().getValueAt(selectedRow, 1).toString();
        int confirm = JOptionPane.showConfirmDialog(null, "Do you really want to remove this admin?\n\n"+"Library ID: "+libID+"\n"+"Name: "+name, "Confirmation!", JOptionPane.YES_NO_OPTION);
        if(confirm==JOptionPane.YES_OPTION){
            AdminManagement.removeAdmin(libID);
            
            adminList = AdminManagement.adminList();
            displayAdminTable();
        }
    }//GEN-LAST:event_btRemoveActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to save these changes?", "Confirmation!", JOptionPane.YES_NO_OPTION);
        List<String> errList = new ArrayList();
        if(confirm==JOptionPane.YES_OPTION){
            if(tfEmail.getText().isEmpty()){
                errList.add("Email");
                tfEmail.setBackground(Color.yellow);
            }
            if(tfPhone.getText().isEmpty()){
                errList.add("Phone");
                tfPhone.setBackground(Color.yellow);
            }
            if(tfDay.getText().isEmpty()){
                errList.add("Day");
                tfDay.setBackground(Color.yellow);
            }
            if(tfMonth.getText().isEmpty()){
                errList.add("Month");
                tfMonth.setBackground(Color.yellow);
            }
            if(tfYear.getText().isEmpty()){
                errList.add("Year");
                tfYear.setBackground(Color.yellow);
            }
            if(taAddress.getText().isEmpty()){
                errList.add("Address");
                taAddress.setBackground(Color.yellow);
            }
            if(!errList.isEmpty()){
                String err = "";
                for(String temp : errList){
                    err += temp+"\n";
                }
                JOptionPane.showMessageDialog(null, "The following text field(s) cannot be empty:\n\n"+err, "Information", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            if(!tfPhone.getText().isEmpty()){
                try{
                    Integer.parseInt(tfPhone.getText());
                }catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null, "Phone only contains numbers!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                    tfPhone.setBackground(Color.yellow);
                    return;
                }
            }
            try{
                Integer.parseInt(tfDay.getText());
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null, "Day only contains numbers!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfDay.setBackground(Color.yellow);
                return;
            }
            try{
                Integer.parseInt(tfMonth.getText());
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null, "Month only contains numbers!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfMonth.setBackground(Color.yellow);
                return;
            }
            try{
                Integer.parseInt(tfYear.getText());
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null, "Year only contains numbers!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfYear.setBackground(Color.yellow);
                return;
            }
            
            if(!tfPhone.getText().isEmpty() && tfPhone.getText().length()!=10){
                JOptionPane.showMessageDialog(null, "Phone contains 10 numbers!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfPhone.setBackground(Color.yellow);
                return;
            }

            if(!tfEmail.getText().contains("@")){
                JOptionPane.showMessageDialog(null, "Invalid email!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfEmail.setBackground(Color.yellow);
                return;
            }

            if(Integer.parseInt(tfMonth.getText())>12 || Integer.parseInt(tfMonth.getText())<1){
                JOptionPane.showMessageDialog(null, "Invalid month!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfMonth.setBackground(Color.yellow);
                return;
            }
            
            if(Integer.parseInt(tfDay.getText())<1){
                JOptionPane.showMessageDialog(null, "Invalid day!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfDay.setBackground(Color.yellow);
                return;
            }
            
            if(Integer.parseInt(tfYear.getText())<1){
                JOptionPane.showMessageDialog(null, "Invalid year!", "Alert!", JOptionPane.INFORMATION_MESSAGE);
                tfYear.setBackground(Color.yellow);
                return;
            }
            
            String gender;
            if(cbGender.getSelectedItem().toString().equals("Male"))
                gender = "M";
            else
                gender = "F";

            String DOB = tfYear.getText()+"-"+tfMonth.getText()+"-"+tfDay.getText();
            
            int selectedRow = adminTable.getSelectedRow();
            int libID = Integer.parseInt(adminTable.getValueAt(selectedRow, 0).toString());
            
            AdminManagement.editAdmin(libID, gender, DOB, tfPhone.getText(), tfEmail.getText(), taAddress.getText());
            
            adminList = AdminManagement.adminList();
            adminPanel.removeAll();
            adminPanel.add(infoPanel);
            adminPanel.revalidate();
            adminPanel.repaint();
            displayAdminInfo();
            adminTable.setEnabled(true);
        }
    }//GEN-LAST:event_btSaveActionPerformed

    private void btReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReturnActionPerformed
        adminPanel.removeAll();
        adminPanel.add(infoPanel);
        adminPanel.revalidate();
        adminPanel.repaint();
        displayAdminInfo();
        adminTable.setEnabled(true);
    }//GEN-LAST:event_btReturnActionPerformed

    private void tfDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDayFocusGained
        tfDay.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfDayFocusGained

    private void tfMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfMonthFocusGained
        tfMonth.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfMonthFocusGained

    private void tfYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfYearFocusGained
        tfYear.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfYearFocusGained

    private void tfPhoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPhoneFocusGained
        tfPhone.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfPhoneFocusGained

    private void tfEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEmailFocusGained
        tfEmail.setBackground(Color.WHITE);
    }//GEN-LAST:event_tfEmailFocusGained

    private void taAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_taAddressFocusGained
        taAddress.setBackground(Color.WHITE);
    }//GEN-LAST:event_taAddressFocusGained

    public void displayAccount(String libID, JLabel lbLibID, JPasswordField pF, JComboBox cbStatus){
        ArrayList<Account> accList = AccountManagement.accountList();
        for(Account acc : accList){
            if(acc.getLibID() == Integer.parseInt(libID)){
                lbLibID.setText(String.valueOf(acc.getLibID()));
                pF.setText(acc.getPassword());
                cbStatus.setSelectedItem(acc.getStatus());
                break;
            }
        }
    }
    
    private void btAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAccountActionPerformed
        int selectedRow = adminTable.getSelectedRow();
        if(selectedRow==-1){
            JOptionPane.showMessageDialog(null, "Please select an admin first!", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String libID = adminTable.getModel().getValueAt(selectedRow, 0).toString();
        
        JFrame accFrame = new JFrame("Account");
        accFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        JLabel lbLibID = new JLabel("Library ID:");
        JLabel lbPassword = new JLabel("Password:");
        JLabel lbDisplayLibID = new JLabel(libID);
        JPasswordField pF = new JPasswordField(10);
        JButton btShow = new JButton("Show");
        JLabel lbStatus = new JLabel("Status:");
        JComboBox cbStatus = new JComboBox();
        cbStatus.addItem("Enabled");
        cbStatus.addItem("Disabled");
        
        JButton btSet = new JButton("Set Account");
        JButton btReset = new JButton("Reset");
        
        pF.addFocusListener(new FocusListener(){
            @Override
            public void focusGained(FocusEvent fe) {
                pF.setBackground(Color.WHITE);
            }

            @Override
            public void focusLost(FocusEvent fe) {
                
            }
            
        });
        
        btShow.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
                if(pF.getEchoChar()=='*')
                    pF.setEchoChar((char)0);
                else
                    pF.setEchoChar('*');
            }
            
        });
        
        btReset.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
                displayAccount(libID, lbDisplayLibID, pF, cbStatus);
            }
            
        });
        
        btSet.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
                if(pF.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Password cannot be empty!", "Information", JOptionPane.INFORMATION_MESSAGE);
                    pF.setBackground(Color.yellow);
                    return;
                }
                if(pF.getText().length()<5){
                    JOptionPane.showMessageDialog(null, "Password cannot be less than 5 characters!", "Information", JOptionPane.INFORMATION_MESSAGE);
                    pF.setBackground(Color.yellow);
                    return;
                }
                AccountManagement.setAccount(libID, pF.getText(), cbStatus.getSelectedItem().toString());
                
                accFrame.dispose();
            }
            
        });
        
        Font font = new Font("Tahoma", Font.PLAIN, 24);
        lbLibID.setFont(font);
        lbPassword.setFont(font);
        lbDisplayLibID.setFont(font);
        pF.setFont(font);
        btShow.setFont(font);
        lbStatus.setFont(font);
        cbStatus.setFont(font);
        
        Font font2 = new Font("Tahoma", Font.BOLD, 24);
        btSet.setFont(font2);
        btReset.setFont(font2);
        
        lbDisplayLibID.setPreferredSize(pF.getPreferredSize());
        lbPassword.setPreferredSize(lbLibID.getPreferredSize());
        lbStatus.setPreferredSize(lbLibID.getPreferredSize());
        
        JPanel accountInfoPanel = new JPanel();
        accountInfoPanel.setPreferredSize(new Dimension(425,190));
        accountInfoPanel.setLayout(new FlowLayout(FlowLayout.LEADING, 15, 20));
        
        accountInfoPanel.add(lbLibID);
        accountInfoPanel.add(lbDisplayLibID);
        accountInfoPanel.add(lbPassword);
        accountInfoPanel.add(pF);
        accountInfoPanel.add(btShow);
        accountInfoPanel.add(lbStatus);
        accountInfoPanel.add(cbStatus);
        
        JPanel btPanel = new JPanel();
        btPanel.setPreferredSize(new Dimension(300,50));
        btPanel.add(btSet, BorderLayout.LINE_START);
        btPanel.add(btReset, BorderLayout.LINE_END);
        
        accFrame.add(accountInfoPanel, BorderLayout.NORTH);
        accFrame.add(btPanel, BorderLayout.SOUTH);
        
        accFrame.setSize(480,300);
        accFrame.setLocationRelativeTo(null);
        accFrame.setVisible(true);
        
        displayAccount(libID, lbDisplayLibID, pF, cbStatus);
    }//GEN-LAST:event_btAccountActionPerformed

    private void btNewAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewAdminActionPerformed
        NewAdminForm naf = new NewAdminForm();
        naf.setVisible(true);
    }//GEN-LAST:event_btNewAdminActionPerformed

    private void btSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSaveMouseEntered
        btSave.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_btSaveMouseEntered

    private void btSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSaveMouseExited
        btSave.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btSaveMouseExited

    private void btReturnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btReturnMouseEntered
        btReturn.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_btReturnMouseEntered

    private void btReturnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btReturnMouseExited
        btReturn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btReturnMouseExited

    private void btNewAdminMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btNewAdminMouseEntered
        btNewAdmin.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_btNewAdminMouseEntered

    private void btNewAdminMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btNewAdminMouseExited
        btNewAdmin.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btNewAdminMouseExited

    private void btEditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btEditMouseEntered
        btEdit.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_btEditMouseEntered

    private void btEditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btEditMouseExited
        btEdit.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btEditMouseExited

    private void btRemoveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btRemoveMouseEntered
        btRemove.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_btRemoveMouseEntered

    private void btRemoveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btRemoveMouseExited
        btRemove.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btRemoveMouseExited

    private void btAccountMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAccountMouseEntered
        btAccount.setBackground(new Color(120,165,208));
    }//GEN-LAST:event_btAccountMouseEntered

    private void btAccountMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAccountMouseExited
        btAccount.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btAccountMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel adminInfoEditPanel;
    private javax.swing.JPanel adminInfoPanel;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JTable adminTable;
    private javax.swing.JButton btAccount;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btNewAdmin;
    private javax.swing.JButton btRemove;
    private javax.swing.JButton btReturn;
    private javax.swing.JButton btSave;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JComboBox<String> cbGender;
    private javax.swing.JPanel infoEditPanel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jspInfoEditPanel;
    private javax.swing.JScrollPane jspInfoPanel;
    private javax.swing.JLabel lbAddress;
    private javax.swing.JLabel lbAddress2;
    private javax.swing.JLabel lbDOB;
    private javax.swing.JLabel lbDOB2;
    private javax.swing.JLabel lbDOB3;
    private javax.swing.JLabel lbDOB4;
    private javax.swing.JLabel lbDisplayAddress;
    private javax.swing.JLabel lbDisplayEmail;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbEmail2;
    private javax.swing.JLabel lbGender;
    private javax.swing.JLabel lbGender2;
    private javax.swing.JLabel lbPhone;
    private javax.swing.JLabel lbPhone2;
    private javax.swing.JLabel lbStartDate;
    private javax.swing.JTextArea taAddress;
    private javax.swing.JTextField tfDay;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfMonth;
    private javax.swing.JTextField tfPhone;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField tfYear;
    // End of variables declaration//GEN-END:variables
}
